<?xml version="1.0" encoding="UTF-8"?><i><chatserver>chat.bilibili.com</chatserver><chatid>715453541</chatid><mission>0</mission><maxlimit>1500</maxlimit><state>0</state><real_name>0</real_name><source>k-v</source><d p="117.14000,1,25,16777215,1653436273,0,5fb6dfd6,1059859293593400576,11">感觉把pytbon写回了Java函数定义一样</d><d p="177.51100,1,25,16777215,1653363424,0,bc0fdb22,1059248194950757376,11">众所周知，Java泛型也是编译时的</d><d p="401.96100,5,25,15138834,1652937706,0,ec5d0238,1055677009033708032,11">string字符串</d><d p="71.10300,1,25,16777215,1652937522,0,ec5d0238,1055675471544456192,11">就是python新版后可以变成强类型了</d><d p="547.50300,1,25,16777215,1652881573,0,cc9d6c59,1055206130470363904,11">有所谓的，Python的类是类对象</d><d p="164.31900,1,25,16777215,1652691592,0,a756e738,1053612461288209920,11">拒绝套娃</d><d p="563.09200,1,25,16777215,1652230094,0,50add39,1049741133619424000,11">回到C语言了属于是</d><d p="175.28300,1,25,16777215,1653448445,0,79d3c3ca,1059961399284992000,10">都规定好列表存储数据类型了，还叫泛型干嘛</d><d p="207.96500,1,25,16777215,1653446268,0,cfd80cec,1059943135020462336,10">不向下兼容的特性，回退Py版本就要重写</d><d p="77.41700,1,25,16777215,1653365178,0,47a88ab9,1059262910146044672,10">注解是给人看的，编译器不编译。</d><d p="283.49900,1,25,16777215,1653185017,0,6fc68e8d,1057751603697796352,10">文档上说这好像应该加引号</d><d p="100.73300,1,25,16777215,1653145306,0,427b4e98,1057418489574421760,10">动态语言变静态是吧</d><d p="364.84100,1,25,16777215,1652937660,0,ec5d0238,1055676622042193152,10">这个就是强类型了</d><d p="167.41700,1,25,16777215,1652283454,0,586135d6,1050188746965787648,10">卧槽，这不就是泛型么</d><d p="110.81300,1,25,16777215,1652279121,0,d1abeb03,1050152403195669248,10">泛型？</d><d p="21.11900,1,25,16777215,1652267162,0,12f06ca2,1050052080301179904,10">函数签名</d><d p="543.54600,1,25,16777215,1652191621,0,5049b091,1049418400817891072,10">不是空值啊，类还没有实例化，a就只是个概念，无所谓空不空。</d><d p="367.34100,1,25,16777215,1652191057,0,21b88c0e,1049413665582959360,10">回调函数，也叫委托</d><d p="464.67000,1,25,16777215,1652110124,0,68f23623,1048734749088059648,10">这个挺实用的</d><d p="17.82100,1,25,16777215,1652109228,0,b131e320,1048727231318251264,10">函数注释不是三引号么</d><d p="172.72000,1,25,16777215,1652868975,0,86aef8d1,1055100454461081088,7">这个不是范型，这个只是验证，并不影响程序</d><d p="502.23700,1,25,16777215,1653523272,0,2ee89f49,1060589098001107200,1">配合mypy会不会好点</d><d p="76.35100,1,25,16777215,1653522971,0,b01631ab,1060586568055771136,1">Python一直是强类型不懂别乱说</d><d p="419.05400,1,25,16777215,1653522925,0,783d637f,1060586188035003648,1">返回多个数据呢</d><d p="535.08300,1,25,16777215,1653448883,0,79d3c3ca,1059965074829018368,1">int a = 15是吧？</d><d p="115.80300,1,25,16777215,1653448331,0,79d3c3ca,1059960444686619136,1">Python不就是为了简便高效吗？为啥又变的像Java一样</d><d p="202.68500,1,25,16777215,1653446158,0,cfd80cec,1059942216266435072,1">Java是假泛型，本质是类型擦除</d><d p="166.19900,1,25,16777215,1653437773,0,a175679e,1059871878149556992,1">这玩意用处不大吧，换成变量就不能用了</d><d p="163.13400,1,25,16777215,1653407597,0,f3df302,1059618744923397120,1">我的哥</d><d p="158.60800,1,25,16777215,1653115272,0,cd451845,1057166545718926592,1">笑死了，就这还算抢类型的，人家rust的都没说啥呢</d><d p="222.77900,1,25,16777215,1653098065,0,9a71519,1057022197756905984,1">读作塔剖 tʌpl</d><d p="158.31300,1,25,16777215,1652937648,0,ec5d0238,1055676520674232064,1">这个只是预警并没有实质性报错</d><d p="26.94300,1,25,16777215,1652937379,0,ec5d0238,1055674266328144384,1">井号和三个引号一样</d><d p="547.50300,1,25,16777215,1652881548,0,cc9d6c59,1055205926459500032,1">有所谓的，Python未实例化的类也是对象</d><d p="160.10400,1,25,16777215,1652804724,0,e4d9600b,1054561478067145728,1">套娃呢</d><d p="114.32300,1,25,16777215,1652679864,0,c67a835e,1053514075860055808,1">说泛型的怕是连类型是啥都不懂，复习下基础吧</d><d p="126.50900,1,25,16777215,1652589795,0,898edbf3,1052758526495213568,1">前面说范型的你得好好补充一下基础知识了</d><d p="149.39600,1,25,16777215,1652251951,0,e5f21b67,1049924484070455296,1">。。。</d><d p="160.53200,1,25,16777215,1652249941,0,35978b2e,1049907617952033280,1">那后面这个1.5运行时会出问题吗</d><d p="149.98200,1,25,16777215,1652242520,0,667cd825,1049845367249636096,1">哈哈，</d><d p="70.14600,1,25,16777215,1652236923,0,d87b98e7,1049798420228779520,1">给个建议，背景音乐可以去掉，或者小一点</d><d p="527.20700,1,25,16777215,1652225213,0,ace48d93,1049700190375853312,1">这我经常用。为了方便调用方法</d><d p="687.91500,1,25,16777215,1652191964,0,5049b091,1049421277875509760,1">建议叫 “类型提示” Type Hint，这个不只针对函数，也不是注解。</d><d p="659.91400,1,25,16777215,1652191875,0,5049b091,1049420524268134656,1">FastAPI大量使用 type hint 和 Pydantic，避免了很多输入校验的工作。</d><d p="609.88700,1,25,16777215,1652191742,0,5049b091,1049419409799528960,1">3.9 以后就不需要import typing了，小写的 list 包含大写List，可以都用小写 list</d><d p="22.50500,1,25,16777215,1652188454,0,d1c0131c,1049391829029509632,1">井号都可以</d><d p="692.95800,1,25,16777215,1652109750,0,b131e320,1048731616438041600,1">看过这本书</d><d p="653.66700,1,25,16777215,1652109719,0,b131e320,1048731352456912384,1">这里有个库用到了这个功能，FastApi，做 Web 接口的类型自动校验</d><d p="524.92200,1,25,16777215,1652109607,0,b131e320,1048730412119042304,1">像 Go，var a int = 15</d><d p="358.65700,1,25,16777215,1652109473,0,b131e320,1048729292508280064,1">装饰器？</d><d p="56.62300,1,25,16777215,1652109259,0,b131e320,1048727495391687424,1">不强制</d></i>